/**
 * DevMentor AI - Usage Examples
 * Exemplos pr√°ticos de como usar o sistema completo
 */

// ========================================
// EXEMPLO 1: CONFIGURA√á√ÉO B√ÅSICA
// ========================================

async function exemploConfiguracaoBasica() {
  console.log('üîß === EXEMPLO 1: CONFIGURA√á√ÉO B√ÅSICA ===');
  
  // Configurar sistema
  window.devMentorConfig.configure({
    debug: true,
    showNotifications: true,
    geminiApiKey: 'sua-api-key-aqui', // Opcional
    features: {
      citations: true,
      playground: true,
      metaphors: true,
      diagrams: true,
      videos: true,
      quizzes: true
    }
  });
  
  // Inicializar sistema
  await window.DevMentorHelpers.initializeMediaRichSystem();
  
  console.log('‚úÖ Sistema configurado e inicializado!');
}

// ========================================
// EXEMPLO 2: GERAR EXPLICA√á√ÉO RICA
// ========================================

async function exemploExplicacaoRica() {
  console.log('üìñ === EXEMPLO 2: EXPLICA√á√ÉO RICA ===');
  
  const codigo = `
async function fetchUserData(userId) {
  try {
    const response = await fetch(\`/api/users/\${userId}\`);
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Erro:', error);
    throw error;
  }
}
  `;
  
  // Gerar explica√ß√£o rica completa
  const explicacao = await window.DevMentorHelpers.generateRichExplanation(
    codigo,
    'complexity',        // Tipo de an√°lise
    'javascript',        // Linguagem
    'intermediate'       // N√≠vel do usu√°rio
  );
  
  console.log('üìä Explica√ß√£o gerada:', explicacao.length, 'caracteres');
  console.log('üé¨ Inclui v√≠deo:', explicacao.includes('video'));
  console.log('üìö Inclui cita√ß√µes:', explicacao.includes('citations'));
  console.log('üéÆ Inclui playground:', explicacao.includes('playground'));
  console.log('üé® Inclui met√°foras:', explicacao.includes('metaphor'));
  console.log('üìä Inclui diagramas:', explicacao.includes('mermaid'));
  console.log('‚úÖ Inclui quizzes:', explicacao.includes('quiz'));
}

// ========================================
// EXEMPLO 3: USAR COMPONENTES INDIVIDUAIS
// ========================================

async function exemploComponentesIndividuais() {
  console.log('üß© === EXEMPLO 3: COMPONENTES INDIVIDUAIS ===');
  
  // 1. CitationEngine
  if (window.citationEngine) {
    const conceitos = [
      { name: 'async/await', confidence: 0.9 },
      { name: 'promises', confidence: 0.8 }
    ];
    
    const citacoes = await window.citationEngine.findCitations(conceitos, 'javascript');
    console.log('üìö Cita√ß√µes encontradas:', Object.keys(citacoes).length, 'categorias');
  }
  
  // 2. VisualMetaphorEngine
  if (window.visualMetaphorEngine) {
    const metafora = window.visualMetaphorEngine.getMetaphor('async_await');
    console.log('üé® Met√°fora:', metafora?.metaphor);
  }
  
  // 3. DiagramGenerator
  if (window.diagramGenerator) {
    const codigo = 'if (condition) { doSomething(); } else { doSomethingElse(); }';
    const diagrama = await window.diagramGenerator.autoGenerateDiagram(codigo, 'complexity');
    console.log('üìä Diagrama gerado:', diagrama?.type);
  }
  
  // 4. QuizGenerator
  if (window.quizGenerator) {
    const conceitos = [{ name: 'async/await', confidence: 0.9 }];
    const quizzes = await window.quizGenerator.generateQuizzes(conceitos, 'intermediate');
    console.log('‚úÖ Quizzes gerados:', quizzes.length);
  }
}

// ========================================
// EXEMPLO 4: INTEGRA√á√ÉO COM GEMINI PRO
// ========================================

async function exemploGeminiPro() {
  console.log('ü§ñ === EXEMPLO 4: GEMINI PRO ===');
  
  if (!window.geminiProIntegration) {
    console.log('‚ö†Ô∏è Gemini Pro n√£o dispon√≠vel');
    return;
  }
  
  // Configurar Gemini Pro
  window.geminiProIntegration.configure('sua-api-key-aqui');
  
  const codigo = 'const data = await fetch("/api");';
  
  try {
    // Explica√ß√£o inteligente
    const explicacao = await window.geminiProIntegration.generateIntelligentExplanation(
      codigo,
      'javascript',
      'complexity',
      'intermediate'
    );
    console.log('üß† Explica√ß√£o inteligente:', explicacao.mainConcept);
    
    // Roteiro de v√≠deo
    const roteiro = await window.geminiProIntegration.generateVideoScript(
      codigo,
      'javascript',
      'optimization',
      45
    );
    console.log('üé¨ Roteiro gerado:', roteiro.scenes?.length, 'cenas');
    
    // Quizzes personalizados
    const quizzes = await window.geminiProIntegration.generatePersonalizedQuizzes(
      codigo,
      'javascript',
      [{ name: 'async/await', confidence: 0.9 }],
      'intermediate'
    );
    console.log('‚úÖ Quizzes personalizados:', quizzes.length);
    
  } catch (error) {
    console.warn('‚ö†Ô∏è Erro no Gemini Pro:', error.message);
  }
}

// ========================================
// EXEMPLO 5: PLAYGROUND INTERATIVO
// ========================================

function exemploPlayground() {
  console.log('üéÆ === EXEMPLO 5: PLAYGROUND ===');
  
  if (!window.interactivePlayground) {
    console.log('‚ö†Ô∏è Playground n√£o dispon√≠vel');
    return;
  }
  
  const codigoInicial = `
// Exemplo de JavaScript
function calcularFatorial(n) {
  if (n <= 1) return 1;
  return n * calcularFatorial(n - 1);
}

console.log(calcularFatorial(5));
  `;
  
  // Criar playground
  const playgroundHTML = window.interactivePlayground.createPlayground(
    codigoInicial,
    'javascript',
    {
      showVisualizer: true,
      showConsole: true,
      showControls: true
    }
  );
  
  console.log('üéÆ Playground criado:', playgroundHTML.length, 'caracteres');
  
  // Inserir no DOM (exemplo)
  const container = document.getElementById('playground-container');
  if (container) {
    container.innerHTML = playgroundHTML;
  }
}

// ========================================
// EXEMPLO 6: DEMO COMPLETA
// ========================================

async function exemploDemoCompleta() {
  console.log('üé¨ === EXEMPLO 6: DEMO COMPLETA ===');
  
  if (!window.completeMediaRichDemo) {
    console.log('‚ö†Ô∏è Demo n√£o dispon√≠vel');
    return;
  }
  
  const demo = new window.CompleteMediaRichDemo();
  
  // Demo r√°pida
  await demo.runQuickDemo();
  
  // Demo completa (comentado para n√£o ser muito verboso)
  // await demo.runCompleteDemo();
  
  // Demo interativa com interface
  await demo.runInteractiveDemo();
}

// ========================================
// EXEMPLO 7: MONITORAMENTO E STATUS
// ========================================

function exemploMonitoramento() {
  console.log('üìä === EXEMPLO 7: MONITORAMENTO ===');
  
  // Status do sistema
  const status = window.DevMentorHelpers.getMediaRichSystemStatus();
  console.log('üìä Status do sistema:', status);
  
  // Configura√ß√£o atual
  const config = window.devMentorConfig.getConfig();
  console.log('‚öôÔ∏è Configura√ß√£o:', config);
  
  // Status Gemini Pro
  if (window.geminiProIntegration) {
    const geminiStatus = window.geminiProIntegration.getStatus();
    console.log('ü§ñ Status Gemini Pro:', geminiStatus);
  }
}

// ========================================
// EXEMPLO 8: PERSONALIZA√á√ÉO AVAN√áADA
// ========================================

function exemploPersonalizacao() {
  console.log('üé® === EXEMPLO 8: PERSONALIZA√á√ÉO ===');
  
  // Personalizar configura√ß√£o
  window.devMentorConfig.updateConfig({
    theme: 'dark',
    language: 'en-US',
    features: {
      citations: true,
      playground: true,
      metaphors: false,  // Desabilitar met√°foras
      diagrams: true,
      videos: false,     // Desabilitar v√≠deos
      quizzes: true
    }
  });
  
  // Personalizar estilos CSS
  const customStyles = `
    .devmentor-explanation {
      font-family: 'Monaco', monospace;
      background: #1e1e1e;
      color: #d4d4d4;
    }
    
    .devmentor-citation {
      border-left: 4px solid #007acc;
      background: #2d2d30;
    }
  `;
  
  // Injetar estilos personalizados
  const styleSheet = document.createElement('style');
  styleSheet.textContent = customStyles;
  document.head.appendChild(styleSheet);
  
  console.log('üé® Personaliza√ß√£o aplicada!');
}

// ========================================
// EXEMPLO 9: INTEGRA√á√ÉO COM APLICA√á√ÉO
// ========================================

class MinhaAplicacao {
  constructor() {
    this.devMentorConfig = {
      debug: false,
      showNotifications: true,
      features: {
        citations: true,
        playground: true,
        metaphors: true,
        diagrams: true,
        videos: true,
        quizzes: true
      }
    };
  }
  
  async inicializar() {
    // Configurar DevMentor AI
    window.devMentorConfig.configure(this.devMentorConfig);
    
    // Inicializar sistema
    await window.DevMentorHelpers.initializeMediaRichSystem();
    
    console.log('‚úÖ Aplica√ß√£o inicializada com DevMentor AI!');
  }
  
  async explicarCodigo(codigo, linguagem, tipoAnalise) {
    try {
      const explicacao = await window.DevMentorHelpers.generateRichExplanation(
        codigo,
        tipoAnalise,
        linguagem,
        'intermediate'
      );
      
      return explicacao;
    } catch (error) {
      console.error('Erro ao gerar explica√ß√£o:', error);
      return 'Erro ao gerar explica√ß√£o';
    }
  }
  
  async criarPlayground(codigo, linguagem) {
    if (!window.interactivePlayground) {
      return null;
    }
    
    return window.interactivePlayground.createPlayground(
      codigo,
      linguagem,
      { showVisualizer: true }
    );
  }
}

// ========================================
// EXEMPLO 10: TESTES E VALIDA√á√ÉO
// ========================================

async function exemploTestes() {
  console.log('üß™ === EXEMPLO 10: TESTES ===');
  
  const testes = [
    {
      nome: 'Inicializa√ß√£o do sistema',
      teste: async () => {
        const status = window.DevMentorHelpers.getMediaRichSystemStatus();
        return status.allComponentsLoaded;
      }
    },
    {
      nome: 'Gera√ß√£o de explica√ß√£o',
      teste: async () => {
        const explicacao = await window.DevMentorHelpers.generateRichExplanation(
          'console.log("test");',
          'complexity',
          'javascript',
          'beginner'
        );
        return explicacao.length > 0;
      }
    },
    {
      nome: 'CitationEngine',
      teste: async () => {
        if (!window.citationEngine) return false;
        const citacoes = await window.citationEngine.findCitations(
          [{ name: 'javascript', confidence: 0.8 }],
          'javascript'
        );
        return Object.keys(citacoes).length > 0;
      }
    },
    {
      nome: 'VisualMetaphorEngine',
      teste: async () => {
        if (!window.visualMetaphorEngine) return false;
        const metafora = window.visualMetaphorEngine.getMetaphor('async_await');
        return metafora && metafora.metaphor;
      }
    },
    {
      nome: 'DiagramGenerator',
      teste: async () => {
        if (!window.diagramGenerator) return false;
        const diagrama = await window.diagramGenerator.autoGenerateDiagram(
          'if (true) { console.log("test"); }',
          'complexity'
        );
        return diagrama && diagrama.type;
      }
    }
  ];
  
  console.log('üß™ Executando testes...');
  
  for (const teste of testes) {
    try {
      const resultado = await teste.teste();
      console.log(`${resultado ? '‚úÖ' : '‚ùå'} ${teste.nome}`);
    } catch (error) {
      console.log(`‚ùå ${teste.nome} - Erro:`, error.message);
    }
  }
  
  console.log('üß™ Testes conclu√≠dos!');
}

// ========================================
// EXECUTAR TODOS OS EXEMPLOS
// ========================================

async function executarTodosExemplos() {
  console.log('üöÄ === EXECUTANDO TODOS OS EXEMPLOS ===\n');
  
  try {
    await exemploConfiguracaoBasica();
    console.log('');
    
    await exemploExplicacaoRica();
    console.log('');
    
    await exemploComponentesIndividuais();
    console.log('');
    
    await exemploGeminiPro();
    console.log('');
    
    exemploPlayground();
    console.log('');
    
    await exemploDemoCompleta();
    console.log('');
    
    exemploMonitoramento();
    console.log('');
    
    exemploPersonalizacao();
    console.log('');
    
    await exemploTestes();
    console.log('');
    
    console.log('üéâ Todos os exemplos executados com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante execu√ß√£o dos exemplos:', error);
  }
}

// Exportar exemplos para uso global
window.DevMentorExamples = {
  configuracaoBasica: exemploConfiguracaoBasica,
  explicacaoRica: exemploExplicacaoRica,
  componentesIndividuais: exemploComponentesIndividuais,
  geminiPro: exemploGeminiPro,
  playground: exemploPlayground,
  demoCompleta: exemploDemoCompleta,
  monitoramento: exemploMonitoramento,
  personalizacao: exemploPersonalizacao,
  testes: exemploTestes,
  executarTodos: executarTodosExemplos
};

console.log('üìö DevMentor Examples carregados!');


























